#!/bin/bash

export CC=clang
export CXX=clang++

if ! [ -d "$WORK_DIR" ]; then mkdir $WORK_DIR; fi
cd $WORK_DIR

if [ -d "$PROJECT_DIR" ]; 
    then 
        cd $PROJECT_DIR; 
        git config --global --add safe.directory $PWD;
        git checkout $GIT_BRANCH;
        git pull;
        cd ..; 
    else 
        git clone $GIT_REPOSITORY; 
        git checkout $GIT_BRANCH;
fi

if ! [ -d "$BUILD_DIR" ]; then mkdir $BUILD_DIR; fi
cd $BUILD_DIR

#
# B U I L D
#
# https://gitlab.com/ompcluster/ompcluster-wiki/-/wikis/How-to-build-LLVM-and-Clang
#

# BUILD USING MAKE

#cmake $WORK_DIR/llvm-project-moheft/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;openmp" -DLLVM_USE_LINKER=gold -DLLVM_TARGETS_TO_BUILD="X86;NVPTX" -DLLVM_ENABLE_ASSERTIONS=On -DLIBOMPTARGET_ENABLE_DEBUG=On -DLIBOMPTARGET_ENABLE_PROFILER=On -DLLVM_CCACHE_BUILD=On
#make -j4



# BUILD USING NINJA

cmake $WORK_DIR/llvm-project-moheft/llvm -GNinja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;openmp" -DLLVM_USE_LINKER=gold -DLLVM_TARGETS_TO_BUILD="X86;NVPTX" -DLLVM_ENABLE_ASSERTIONS=On -DLIBOMPTARGET_ENABLE_DEBUG=On -DLIBOMPTARGET_ENABLE_PROFILER=On -DLLVM_CCACHE_BUILD=On

ninja -l 6 -j 6


export PATH=$BUILD_DIR/bin/:$PATH
export LD_LIBRARY_PATH=$BUILD_DIR/lib/:$LD_LIBRARY_PATH
export LIBRARY_PATH=$BUILD_DIR/lib/:$LIBRARY_PATH
export CPATH=$BUILD_DIR/projects/openmp/runtime/src:$CPATH
